var apiServices=angular.module("apiServices",[]),baseUrl="http://localhost:4000/api/";apiServices.factory("Users",function($http,$window,$q){return{register:function(user){return $http.post(baseUrl+"register",user)},login:function(user){var deferred=$q.defer();return $http.post(baseUrl+"login",user).success(function(data){$http.defaults.headers.common.Authorization=data.token,$window.localStorage.curUser=user.username,deferred.resolve(user)})["catch"](function(err){deferred.reject(err)}),deferred.promise},setProfilePic:function(image){var fd=new FormData;return fd.append("image",image),$http.post(baseUrl+"profilePic/"+$window.localStorage.curUser,fd,{headers:{"Content-Type":void 0},transformRequest:angular.identity})},getProfilePicUrl:function(username){return baseUrl+"profilePic/"+username},getCurrent:function(){return console.log("get current"),$http.get(baseUrl+"user/"+$window.localStorage.curUser)},editCurrent:function(newUser){return $http.put(baseUrl+"user/"+$window.localStorage.curUser,newUser)},deleteCurrent:function(){return $http["delete"](baseUrl+"user/"+$window.localStorage.curUser)},getUser:function(username){return console.log(baseUrl+"user/"+username),$http.get(baseUrl+"user/"+username)},get:function(select_options){return $http.get(baseUrl+"users"+select_options)}}}),apiServices.factory("Collections",function($http,$window,$q){return{get:function(select_options){return $http.get(baseUrl+"collections"+select_options)},post:function(data){return $http({method:"post",url:baseUrl+"collections",data:data,headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(obj){var str=[];for(var p in obj)str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")}})},"delete":function(id){return $http["delete"](baseUrl+"collection/"+id)},getOne:function(select_options){return $http.get(baseUrl+"collection/"+select_options)},put:function(id,data){return $http({method:"put",url:baseUrl+"collection/"+id,data:data,headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(obj){var str=[];for(var p in obj)str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")}}).success(function(req){})}}}),apiServices.factory("Items",function($http,$window,$q){return{get:function(id){return $http.get(baseUrl+"item/"+id)},post:function(name,type,image){var fd=new FormData;return fd.append("image",image),fd.append("name",name),fd.append("type",type),$http.post(baseUrl+"item",fd,{headers:{"Content-Type":void 0},transformRequest:angular.identity})},put:function(id,name,type,image){var fd=new FormData;return fd.append("image",image),fd.append("name",name),fd.append("type",type),$http.put(baseUrl+"item/"+id,fd,{headers:{"Content-Type":void 0},transformRequest:angular.identity})},"delete":function(id){return $http["delete"](baseUrl+"item/"+id)}}});